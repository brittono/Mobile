{"version":3,"sources":["js/lib/jquery-css-transform.js"],"names":["$","getTransformProperty","element","p","properties","shift","style","_propsObj","proxied","fn","css","arg","val","cssProps","props","this","get","jQuery","apply","arguments"],"mappings":"CAAA,SAAWA,GAKP,QAASC,GAAqBC,GAO1B,IAFA,GACIC,GADAC,GAAc,YAAa,kBAAmB,cAAe,eAAgB,cAE1ED,EAAIC,EAAWC,SAElB,OAA+B,KAApBH,EAAQI,MAAMH,GAErB,MAAOA,EAKf,OAAO,YAGX,GAAII,GAAY,KAEZC,EAAUR,EAAES,GAAGC,GACnBV,GAAES,GAAGC,IAAM,SAAUC,EAAKC,GAoDtB,GAhDkB,OAAdL,IAIIA,MAFqB,KAAdP,EAAEa,SAEGb,EAAEa,aAES,KAAXb,EAAEc,MAEFd,EAAEc,cAiBe,KAA1BP,EAAqB,YAGjB,aAAPI,GAGkB,gBAAPA,QACuB,KAApBA,EAAe,aAKjCJ,EAAqB,UAAIN,EAAqBc,KAAKC,IAAI,KAW7B,aAA1BT,EAAqB,UAGrB,GAAW,aAAPI,GASA,GAPAA,EAAMJ,EAAqB,cAOT,KAAPK,GAAsBK,OAAOX,MAEpC,MAAOW,QAAOX,MAAMS,KAAKC,IAAI,GAAIL,OAOvB,gBAAPA,QACuB,KAApBA,EAAe,YAGzBA,EAAIJ,EAAqB,WAAKI,EAAe,gBACtCA,GAAe,UAI9B,OAAOH,GAAQU,MAAMH,KAAMI,aAEhCF","file":"jquery-css-transform.min.js","sourcesContent":["(function ($) {\n    // Monkey patch jQuery 1.3.1+ css() method to support CSS 'transform'\n    // property uniformly across Safari/Chrome/Webkit, Firefox 3.5+, IE 9+, and Opera 11+.\n    // 2009-2011 Zachary Johnson www.zachstronaut.com\n    // Updated 2011.05.04 (May the fourth be with you!)\n    function getTransformProperty(element)\n    {\n        // Try transform first for forward compatibility\n        // In some versions of IE9, it is critical for msTransform to be in\n        // this list before MozTranform.\n        var properties = ['transform', 'WebkitTransform', 'msTransform', 'MozTransform', 'OTransform'];\n        var p;\n        while (p = properties.shift())\n        {\n            if (typeof element.style[p] != 'undefined')\n            {\n                return p;\n            }\n        }\n        \n        // Default to transform also\n        return 'transform';\n    }\n    \n    var _propsObj = null;\n    \n    var proxied = $.fn.css;\n    $.fn.css = function (arg, val)\n    {\n        // Temporary solution for current 1.6.x incompatibility, while\n        // preserving 1.3.x compatibility, until I can rewrite using CSS Hooks\n        if (_propsObj === null)\n        {\n            if (typeof $.cssProps != 'undefined')\n            {\n                _propsObj = $.cssProps;\n            }\n            else if (typeof $.props != 'undefined')\n            {\n                _propsObj = $.props;\n            }\n            else\n            {\n                _propsObj = {}\n            }\n        }\n        \n        // Find the correct browser specific property and setup the mapping using\n        // $.props which is used internally by jQuery.attr() when setting CSS\n        // properties via either the css(name, value) or css(properties) method.\n        // The problem with doing this once outside of css() method is that you\n        // need a DOM node to find the right CSS property, and there is some risk\n        // that somebody would call the css() method before body has loaded or any\n        // DOM-is-ready events have fired.\n        if\n        (\n            typeof _propsObj['transform'] == 'undefined'\n            &&\n            (\n                arg == 'transform'\n                ||\n                (\n                    typeof arg == 'object'\n                    && typeof arg['transform'] != 'undefined'\n                )\n            )\n        )\n        {\n            _propsObj['transform'] = getTransformProperty(this.get(0));\n        }\n        \n        // We force the property mapping here because jQuery.attr() does\n        // property mapping with jQuery.props when setting a CSS property,\n        // but curCSS() does *not* do property mapping when *getting* a\n        // CSS property. (It probably should since it manually does it\n        // for 'float' now anyway... but that'd require more testing.)\n        //\n        // But, only do the forced mapping if the correct CSS property\n        // is not 'transform' and is something else.\n        if (_propsObj['transform'] != 'transform')\n        {\n            // Call in form of css('transform' ...)\n            if (arg == 'transform')\n            {\n                arg = _propsObj['transform'];\n                \n                // User wants to GET the transform CSS, and in jQuery 1.4.3\n                // calls to css() for transforms return a matrix rather than\n                // the actual string specified by the user... avoid that\n                // behavior and return the string by calling jQuery.style()\n                // directly\n                if (typeof val == 'undefined' && jQuery.style)\n                {\n                    return jQuery.style(this.get(0), arg);\n                }\n            }\n\n            // Call in form of css({'transform': ...})\n            else if\n            (\n                typeof arg == 'object'\n                && typeof arg['transform'] != 'undefined'\n            )\n            {\n                arg[_propsObj['transform']] = arg['transform'];\n                delete arg['transform'];\n            }\n        }\n        \n        return proxied.apply(this, arguments);\n    };\n})(jQuery);"]}